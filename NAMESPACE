import("coxed")
import("parallel")
import("doParallel")
import("foreach")
import("stats")
import("graphics")
import("scales")
import("GET")
importFrom("igraph", "graph.data.frame") # for get.transdist.theta()
importFrom("igraph", "shortest.paths") # for get.transdist.theta()
importFrom("igraph", "E") # for get.transdist.theta()
importFrom("spatstat", "bounding.box.xy") # for est.transdist()
importFrom("spatstat", "as.ppp") # for est.transdist()
importFrom("spatstat", "ppp") # for est.transdist()
importFrom("spatstat", "crossdist") # for est.transdist()
importFrom("spatstat", "Kcross") # for get.cross.K()
importFrom("spatstat", "pcf") # for get.cross.PCF()
export(get.pi)
export(get.pi.ci)
export(get.pi.bootstrap)
export(get.pi.permute)
export(get.theta)
export(get.theta.ci)
export(get.theta.bootstrap)
export(get.theta.permute)
export(get.tau)
export(get.tau.bootstrap)
export(get.tau.GET)
export(get.tau.permute)
export(get.pi.typed)
export(get.pi.typed.bootstrap)
export(get.pi.typed.permute)
export(get.theta.typed)
export(get.theta.typed.bootstrap)
export(get.theta.typed.permute)
export(get.tau.typed)
export(get.tau.ci)
export(get.tau.typed.bootstrap)
export(get.tau.typed.permute)
export(plot.tau)
export(sim.epidemic)
export(sim.plot)
export(est.wt.matrix)
export(est.wt.matrix.weights)
export(get.transdist.theta)
export(est.transdist.theta.weights)
export(est.transdist)
export(est.transdist.bootstrap.ci)
export(est.transdist.temporal)
export(est.transdist.temporal.bootstrap.ci)
export(get.cross.K)
export(get.cross.PCF)
useDynLib(IDSpatialStats, .registration=TRUE, .fixes="C_")