% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialfuncs.r
\name{get.tau.D.param.est}
\alias{get.tau.D.param.est}
\title{Cluster range estimation using \code{get.tau.D.param.est}}
\usage{
get.tau.D.param.est(r, tausim, GETres = NULL)
}
\arguments{
\item{r}{the series of spatial distances (or their maximums) we are
interested in}

\item{tausim}{the set of spatially-bootstrapped simulations. Has to be \code{taubstrap} class; use \code{get.tau.bootstrap(..., data.frame = FALSE)} to obtain this.}

\item{GETres}{is a required object and is obtained from a previous global hypothesis test using \code{get.tau.GET}. It ensures that the user has performed a graphical hypothesis test first and has considered there is evidence against H_0, before deciding to estimate the clustering range.}
}
\value{
An object of class \code{tauparamest} which can then be plotted using \code{plot.tau()}. The object consists of:
\itemize{
  \item envelope the distribution of clustering range estimates
}
}
\description{
Estimates the range of spatiotemporal clustering. It records the place on the horizontal tau=1 line where each spatially bootstrapped simulation touches. This distribution then represents an empirical distribution for the clustering range and a confidence interval can be computed.
}
\section{Attributes}{

\itemize{
  \item BCaCI the BCa CI for the distribution of clustering range estimates
}
}

\examples{
\donttest{
# Load data
r.max<-seq(20,1000,20)
r.min<-seq(0,980,20)
r.mid<-(r.max+r.min)/2
sero.type.func<-function(a,b,tlimit=20){
        if(a[5]==b[5]&(abs(a[3]-b[3])<=tlimit)){rc=1}
        else{rc=2}
        return(rc)
}

data(DengueSimRepresentative)
sero.type.rep.func<-function(a,b,tlimit=20){
     if(a[5]==1&b[5]==1&(abs(a[3]-b[3])<=tlimit)){rc=1}
     else{if(a[5]==1&b[5]==-999){rc=2}else{rc=3}}
     return(rc)
}

# get point estimate
Dengue.tau = get.tau(DengueSimRepresentative, sero.type.rep.func, r.max, r.min, "representative",
                     data.frame = TRUE)

# perform graphical hypothesis test using a global envelope test
Dengue.GET = get.tau.GET(DengueSimRepresentative, sero.type.rep.func, r.max,r.min, 
                         permutations = 50, "representative")

# plot point estimate with global envelope and simulation of the null distribution
plot.tau(x = Dengue.tau, r.mid = TRUE, GET.res = Dengue.GET)

# if the graphical hypothesis test and p-value interval suggests evidence against H_0, 
# and the graph suggests clustering, the range of this can be estimated
tausim = get.tau.bootstrap(DengueSimRepresentative, sero.type.rep.func, r.max, r.min, 100, 
                           "representative", data.frame = FALSE)
Dengue.dparam = get.tau.D.param.est(r = r.max, tausim = tausim, Dengue.GET)
median(Dengue.dparam$envelope) # median estimate for the clustering endpoint
Dengue.dparam$envelope # 95\% BCa CI
plot.tau(Dengue.tau, tausim = tausim, d.param.est = Dengue.dparam)
}
}
\seealso{
Other get.tau: 
\code{\link{get.tau.GET}()},
\code{\link{get.tau.bootstrap}()},
\code{\link{get.tau.ci}()},
\code{\link{get.tau.permute}()},
\code{\link{get.tau.typed.bootstrap}()},
\code{\link{get.tau.typed.permute}()},
\code{\link{get.tau.typed}()},
\code{\link{get.tau}()},
\code{\link{plot.tau}()}

Other spatialtau: 
\code{\link{get.pi}()},
\code{\link{get.tau.GET}()},
\code{\link{get.tau}()},
\code{\link{get.theta}()},
\code{\link{plot.tau}()}
}
\author{
Timothy M Pollington
}
\concept{get.tau}
\concept{spatialtau}
