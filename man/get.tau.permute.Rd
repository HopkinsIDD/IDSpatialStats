% Generated by roxygen2 (4.0.2): do not edit by hand
\name{get.tau.permute}
\alias{get.tau.permute}
\title{get the null distribution of the \code{get.tau} function}
\usage{
get.tau.permute(posmat, fun, r = 1, r.low = rep(0, length(r)), permutations,
  comparison.type = "representative")
}
\arguments{
\item{posmat}{a matrix appropriate for input to \code{get.tau}}

\item{fun}{a function appropriate for input to \code{get.tau}}

\item{r}{the series of spatial distances wer are interested in}

\item{r.low}{the low end of each range....0  by default}

\item{permutations}{the number of permute iterations}

\item{comparison.type}{the comparison type to pass as input to \code{get.pi}}
}
\value{
tau values for all the distances we looked at
}
\description{
Does permutations to calculate the null distribution of get pi
if there were no spatial dependence. Randomly reassigns coordinates
to each observation permutations times
}
\examples{
#compare normally distributed with uniform points
x<-cbind(1,runif(100,-100,100), runif(100,-100,100))
x<-rbind(x, cbind(2,rnorm(100,0,20), rnorm(100,0,20)))
colnames(x) <- c("type","x","y")

fun<-function(a,b) {
    if(a[1]!=2) return(3)
    if (b[1]==2) return(1)
    return(2)
}

r.max<-seq(10,100,10)
r.min<-seq(0,90,10)
r.mid <- (r.max+r.min)/2

tau<-get.tau(x,fun,r=r.max,r.low=r.min,comparison.type = "independent")
tau.null<-get.tau.permute(x,fun,r=r.max,r.low=r.min,permutations=50,comparison.type = "independent")

null.ci<-apply(tau.null,2,quantile,probs=c(0.25,0.75))

plot(r.mid, tau ,ylim=c(1/max(tau),max(tau)), type="l", log="y")
lines(c(0,100),c(1,1), lty=3, col="grey")
lines(r.mid, null.ci[1,] , lty=2)
lines(r.mid, null.ci[2,] , lty=2)
}
\author{
Justin Lessler and Henrik Salje
}
\seealso{
Other get.tau: \code{\link{get.tau.bootstrap}};
  \code{\link{get.tau.ci}};
  \code{\link{get.tau.typed.bootstrap}};
  \code{\link{get.tau.typed.permute}};
  \code{\link{get.tau.typed}}; \code{\link{get.tau}}
}

